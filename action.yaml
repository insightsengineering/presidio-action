---
name: "Presidio client - execute analyze action"
description: "Github Action to execute Presidio framework using presidio_cli"
inputs:
  verify-path:
    description: Path to verify
    required: false
    default: "."
  configuration-file:
    description: Path to configuration file or predefined configuration (default, limited)
    required: false
    default: "default"
  configuration-data:
    description: Simple configuration data directly
    required: false
    default: ""
  format-output:
    description: Format of output
    required: false
    default: "auto"
  publish:
    description: Publish result in PR comment
    required: false
    default: "true"
  upload:
    description: Uploads as artifact
    required: false
    default: "true"
  presidio-cli-version:
    description: Presidio cli version
    required: false
    default: "0.0.3"
 branding:
  icon: 'alert-circle'
  color: 'yellow'
runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install presidio-cli
      uses: BSFishy/pip-action@v1
      with:
        packages: presidio-cli==${{ inputs.presidio-cli-version }}

    - name: Get branch names
      id: branch-names
      uses: tj-actions/branch-names@v5.1

    - name: Install en language models
      run: |
        python -m spacy download en_core_web_sm
        python -m spacy download en_core_web_lg
      shell: bash

    - name: Run presidio-cli with default configuration
      if: (inputs.configuration-data == '' && (inputs.configuration-file == 'default'|| inputs.configuration-file == 'limited'))
      run: |
        python -m presidio_cli -f "${{ inputs.format-output }}" -c "${GITHUB_ACTION_PATH}/conf/${{ inputs.configuration-file }}.yaml" "${{ inputs.verify-path }}" | tee ./.presidio-output.txt
      shell: bash

    - name: Run presidio-cli with configuration file
      if: (inputs.configuration-data == '' && inputs.configuration-file != 'default' && inputs.configuration-file != 'limited')
      run: |
        python -m presidio_cli -f "${{ inputs.format-output }}" -c "${{ inputs.configuration-file }}" "${{ inputs.verify-path }}" | tee ./.presidio-output.txt
      shell: bash

    - name: Run presidio-cli with configuration data
      if: (inputs.configuration-data != '')
      run: |
        python -m presidio_cli -f "${{ inputs.format-output }}" -d "${{ inputs.configuration-data }}" "${{ inputs.verify-path }}" | tee ./.presidio-output.txt
      shell: bash

    - name: Issues not found message
      run: |
        if [[ ! -s "./.presidio-output.txt" ]]; then
          echo "There is nothing from presidio-cli" | tee -a "./.presidio-output.txt"
        fi
      shell: bash

    - name: Publish warnings as comment to pull request
      if: ${{ github.event_name == 'pull_request' && contains(inputs.publish, 'true') }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: "${{ inputs.path }}-${{ inputs.configuration-file }}-${{ inputs.format-output }}"
        path: ./.presidio-output.txt

    - name: Upload report ðŸ”¼
      if: ${{ github.event_name == 'pull_request' && contains(inputs.upload, 'true') }}
      uses: actions/upload-artifact@v2
      with:
        name: "presidio-cli output in format ${{ inputs.format-output }}"
        path: "./.presidio-output.txt"
